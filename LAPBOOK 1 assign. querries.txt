1.1: DATA QUERY LANGUAGE

1) select staff_name,design_code from staff_master where hiredate<'01-jan-2003' and staff_sal between 12000 and 25000;

2) select staff_code ,staff_name , dept_code from staff_master where ( sysdate-hiredate)/365 >= 18 order by hiredate desc;

3) select * from staff_master where mgr_code is null;

4) select * from book_master where book_pub_year between 2001 and 2004 and book_name like '%"&"%';

5) select staff_name from staff_master where staff_name like '%\_%' escape '\';




2.1: SINGLE ROW FUNCTIONS

1) select staff_name, lpad(staff_sal,15,'$') as Salary from staff_master;

2) select student_name,to_char(student_dob,'month dd yyyy') as student_dob from student_master where to_char(student_dob,'day') like ('%saturday%') or to_char(student_dob,'day') like ('%sunday%');

3) select staff_name, round ((months_between(sysdate,hiredate)),0) as Months_Worked from staff_master order by Months_Worked;

4) SELECT  * FROM STAFF_MASTER s WHERE TO_NUMBER(TO_CHAR(s.hiredate, 'DD')) <= 15;

5) alter table staff_master add grade varchar2(20);
   update staff_master set grade='A' where staff_sal>50000;
   update staff_master set grade='B' where staff_sal>25000 and staff_sal<50000;
   update staff_master set grade='C' where staff_sal>10000 and staff_sal<25000;
   update staff_master set grade='D' where staff_sal<10000;
   select staff_name,staff_sal,grade from staff_master;

6) select staff_name,to_char(hiredate,'DD MONTH YYYY') AS hiredate,to_char(hiredate,'DAY')AS DAY from STAFF_MASTER ORDER BY TO_CHAR(HIREDATE,'DAY') DESC;

7) select instr('Mississippi', 'i',2,3) from dual;

8) select to_char(next_day(last_day(sysdate)-7,'friday','dd month,yyyy') as payday from dual;

9) select student_code, student_name, decode(dept_code, 20, 'electronics', 30, 'electricals', 'others') department_name from student_master;




2.2: GROUP FUNCTIONS
 
1) select round(MAX(staff_sal),0)"Maximum", round(MIN(staff_sal),0)"minimun",round(SUM(staff_sal),0)"sum",round(avg(staff_sal),0)"average", dept_code from staff_master group by dept_code;

2) SELECT Dept_code,COUNT(dept_code) AS Total_Number_of_Managers FROM staff_master WHERE JOB IN('mgr_code') GROUP BY Dept_code,staff_job;
 

3) select staff_sal, department_master.dept_code, department_master.dept_name from staff_master, department_master where staff_sal>20000and mgr_code=NULL;




3.1: JOINS AND SUBQUERIES

1) select staff_name,staff_salary,d.deptcode,d.deptname from staff_master,dept_master d where staff_salary>20000;

2) SELECT S.STAFF_CODE AS STAFF# ,S.STAFF_NAME AS STAFF,D.DEPT_NAME,S.MGR_CODE AS MGR# FROM STAFFMASTER S,DEPARTMENT_MASTER D WHERE S.DEPT_CODE=D.DEPT_CODE;
 
3) SELECT S.STUDENT_CODE,S.STUDENT_NAME,B.BOOK_CODE,BB.BOOK_NAME FROM STUDENT_MASTER S,BOOK_TRANSACTIONS B, BOOK_MASTER BB WHERE S.STUDENT_CODE=B.STUDENT_CODE AND TO_CHAR(B.BOOK_EXPECTED_RETURN_DATE,'DD MM YYYY')  LIKE TO_CHAR(SYSDATE,'DD MM YYYY');

4) select s.staff_code, s.staff_name, b.book_code, b.book_name, bb.book_issue_date, d.design_name, dm.dept_name from staff_master s, book_master b, book_transactions bb, designation_master d, department_master dm whee s.staff_code=bb.staff_code and b.book_code=bb.book_code and sysdate-30<= bb.ook_issue_date;

6) select staff code,staff name,staff sal from staff master where staff sal>(select avg(staff sal)from staff master);

7) select book_pub_author, book_name from book_master where book_pub_author in(select book_pub_author from book_master group by book_pub_author having count(book_pub_author)>1);

8) SELECT S.Staff_Code,D.Staff_Name,D.DEPT_NAME FROM STAFF_MASTER S,BOOK_TRANSACTIONS D GROUP BY S.STAFF_NAME HAVING COUNT(D.STAFF_NAME)>1;

9) SELECT S.STUDENT_CODE,S.STUDENT_NAME,D.DEPT_NAME FROM STAFFMASTER S,DEPARTMENT_MASTER D GROUP BY S.DEPT_CODE HAVING MAX(S.DEPT_CODE);

10) SELECT S.Staff_Code,S.Staff_Name,D.DEPT_NAME,F.DESIGN_NAME FROM STAFFMASTER S, DEPARTMENT_MASTER D,DESIGNATION_MASTER F WHERE MONTHS_BETWEEN(TO_CHAR(HIREDATE,'MM') ,TO_CHAR(SYSDATE,'MM'))<3;  

11) select b.ename, count(*) from emp e join emp b on b.empno = e.mgr group by b.empno,b.ename;

13) SELECT DEPT_CODE,DEPT_NAME,COUNT(S.STAFF_NAME) AS NUMBEROFPEOPLE FROM STAFF_MASTER S,DEPARTMENT_MASTER D GROUP BY DEPT_CODE;
 



4.1: DATABASE OBJECTS

1) create table customer(Customerid, number(5), cust_name varchar2(20), Address1 varchar2(30), Address2 varchar2(30));

2) alter table cust
    modify cust_name varchar2(30);
    alter table cust rename column cust_name to customername;

3)a) alter customer add age number(3);
     alter customer add gender varchar2(10);
     alter customer add phoneno number(10);

  b) alter customer rename to cust_table;

4) insert into cust values(1000,'Allen', '#115 Chicago', '#115 Chicago', 'M','25','7878776');
   insert into cust values(1001,'George', '#116 France', '#116 France', 'M','25','434524');
   insert into cust values(1002,'Becker', '#114 New York', '#114 New York', 'M','45','431525');
    

5) alter table cust_table add constraint custid_prim primary key(customerid);

6) insert into cust_tables values(1002, 'John', '#114 chicago', '#114 Chicago', 'M' , 45, 439525);
    error at line 1:
    ora:00001 : unique constraint <system.custid_prim> violated

7) alter table cust_table disable constraint custid_prim;
   insert into cust_table values (1022,'beckar', '#114 New york' , '# 114 New york", 'M',45,431525);
   insert into cust_table values (1003,'Nanapateker', '#115 India' , '# 114 India", 'M',45,431525);

8) Alter table cust_table add constraints Custid_prim PRIMARY KEY (customerid);

9) Alter table cust_table drop PRIMARY KEY custid_prim;
    Insert into cust_table(1002, Becker, #114 New York, #114 New york , M, 45,431525, 15000.50);
    Insert into cust_table(1003, Nanapatekar, #115 India, #115 India , M, 45, 431525,20000.50);

10) truncate table customer ; 
      
11) alter table customer add email varchar2(20);  

12) alter table customer drop column email;  

13) create table Suppliers as select(customerid as suppid,customername as sname,adddress1 as addr1,address2 as addr2,phoneno as contactno) from cust_table;

14) Drop table suppliers;
    create table customerMaster(customerId number(5) primary key, customername varchar2(20) not null, address1 varchar2(20) not null, address2 varchar2(20), gender varchar2(1), age number(3), phoneNo number(10));

15) Create table Accoutnmaster(customerid number(5),Accountnumber number(10) primary key ,accounttype char(3),ledgerbalance number(10) Not Null);
    Create sequence seq_ano
    MINVALUE 101
    MAXVALUE 10000
    START WITH 101
    INCREMENT BY 1
    CACHE 101;

16) Alter table Accountmaster ADD constraint ass_fk FOREIGN KEY(customerid) REFERENCES customermaster(customerid);      


17) insert into CustomerMaster values(1000,Allen,#115Chicago,#115Chicago,M,25,7878776);
    insert into CustomerMaster values(1001,George,#116France,#116France,M,25,434524);
    insert into CustomerMaster values(1002,Becker,#114New York,#114New York,M,45,4315250);

18) Alter table accountmaster and constraint ck_ac check(accounttype = 'NRI' or accounttype = 'IND');

19) Alter table accountmaster and constraint balance_check(ledger balance > 5000);

20) Delete from accountmaster,cust_table where customerid=1001;

21) create table accountdetails as select *from accountmaster;

22) create view acc_view as select (customer_id,customer_name,accountnumber,accounttype,ledgerbalance) from accountmaster;

23) create view vAccs_Dtls as select Accounttype,ledgerbalance from Accountmaster where where accounttype 'IND' and ledgerbalance < 10000;

24) create view accsvw10 as select * from employee with READ ONLY;

25) create sequence seq_dept minvalue 40 start with 40 increment by 10 maxvalue 200 cache 40;

26) create table department_masters(dept_no number, dept_name varchar2(20)) ;
    insert into department_masters values (seq_dept.NEXTVAL, 'cse');
    insert into department_masters values (seq_dept.NEXTVAL, 'it');
    insert into department_masters values (seq_dept.NEXTVAL, 'ece');

27) DROP sequence seq_dept;

28) create index no_name on emp(empno);
    select * from emp;

29) create  synonym syn_emp for emp;

30) select * from user_synonyms where SYNONYM_NAME='SYNEMP';

31) CREATE INDEX IDX_EMP_HIREDATE on emp(HIREDATE);

32) create sequence Seq_Emp start with 1000 increment by 1;
    create table employee(empno number, ename varchar2(30));
    insert into employee values(Seq_Emp.nextval, '&ename');




5.1: DATA MANIPULATION LANGUAGE

1) create table employee as select * from emp where 1=3;
   desc employee;

2) select * from employee;

3) update table employee set job = (select job from employee where empno = 7788), dept no = (select deptno from employee where empno = 7788) where empno = 7698;

4) delete from employee where dept_name='sales';

5) update employee set deptno =(select deptno from employee where empno = 7698) where empno= 7788;

6) insert into employee values(&empno,'&ename','&job',&mgr,'&hiredate',&salary,&comm,&deptno);




6.1: TRANSACTION CONTROL LANGUAGE STATEMENTS 

1) insert into customermaster values(&customerid, &customername, &gender, &age, &phoneno);

2) insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) values ( 6000, John, #115 Chicago, #115 Chicago, M, 25, 7878776, 10000 );
   insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) values (	6001, Jack, #116 France, #116 France, M, 25, 434524, 20000  );
   insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) values (	6002, James, #114 New York, #114 New York, M, 45, 431525, 15000.50);
   savepoint p1;

3) insert into customer_table values(6003, 'John', '#114 Chicago', '#114 Chicago ', 'M',45, 439525,1900.60'); 

4) rollback p1;





 


